{
	"resourceType": "CodeSystem",
	"id": "sirb-rm-codesystem",
	"meta": {
		"versionId": "7",
		"lastUpdated": "2020-04-07T02:16:56.584+00:00",
		"source": "#M9gsyWAPnp4kkbSL",
		"profile": [
			"http://hl7.org/fhir/StructureDefinition/shareablecodesystem"
		]
	},
	"text": {
		"status": "generated",
		"div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"> \n      <p>CodeSystem &quot;Recruitment Materials CodeSystem&quot;</p> \n      <table class=\"grid\"> \n        <tr> \n          <td> \n            <b>Code</b> </td> \n          <td> \n            <b>Display</b> </td> \n          <td> \n            <b>Definition</b> </td> </tr> \n        <tr> \n          <td>a</td> \n          <td>b</td> \n          <td>c</td> </tr> </table> </div>"
	},
	"url": "http://hl7.org/fhir/CodeSystem/recruitment",
	"version": "0.1.0",
	"name": "Recruitment_materials_codesystem",
	"status": "draft",
	"experimental": false,
	"publisher": "UAMS",
	"description": "Code System providing a list of Study recruitment material categories and items.",
	"caseSensitive": true,
	"content": "complete",
	"concept": [
		{
			"code": "broadcast",
			"display": "Broadcast Communication",
			"definition": "Broadcasting is the distribution of audio or video content to a dispersed audience via any electronic mass communications medium, but typically one using the electromagnetic spectrum (radio waves), in a one-to-many model.",
			"concept": [
				{
					"code": "audio",
					"display": "Audio Clip",
					"definition": "A form of waveform distortion."
				},
				{
					"code": "video",
					"display": "Video Clip",
					"definition": "A part of a longer recording."
				},
				{
					"code": "radio",
					"display": "Radio Spot",
					"definition": "A transmission and reception of electromagnetic waves, especially those carrying sound messages."
				},
				{
					"code": "tv",
					"display": "TV Spot"
				}
			]
		},
		{
			"code": "printed",
			"display": "Printed Communication",
			"definition": "Printed matter was produced by printers or publishers, such as books, magazines, booklets, brochures and other publicity materials and in some cases, newspapers.",
			"concept": [
				{
					"code": "billboard",
					"display": "Billboard/Bus Ad",
					"definition": "A large outdoor advertising space designed to capture the attention of motorists and pedestrians."
				},
				{
					"code": "brochure",
					"display": "Brochure/Pamphlet",
					"definition": "A small book or magazine that contains images and information about a company or organization's products and/or services."
				},
				{
					"code": "flyers",
					"display": "Flyer/Notice",
					"definition": "Sometimes referred to as handbills, leaflets, inserts or circulars. Flyer is a small piece of paper with information on it about a product or event."
				},
				{
					"code": "magazine",
					"display": "Magazine",
					"definition": "A periodical publication containing articles and illustrations."
				},
				{
					"code": "mail",
					"display": "Mail",
					"definition": "Letters and packages conveyed by the postal system."
				},
				{
					"code": "newspaper",
					"display": "Newspaper",
					"definition": "A printed publication (usually issued daily or weekly) consisting of folded unstapled sheets and containing news, feature articles and advertisements."
				},
				{
					"code": "postcard",
					"display": "Postcard",
					"definition": "Is sending a message by mail without an envelope."
				},
				{
					"code": "poster",
					"display": "Poster/Sign",
					"definition": "A large printed picture, photograph, or notice that you stick or pin to a wall or board, usually for decoration or to advertise something."
				},
				{
					"code": "tent",
					"display": "Table Tent",
					"definition": "A convenient, self-standing promotional unit created from printed and folded cardstock."
				}
			]
		},
		{
			"code": "electronic",
			"display": "Electronic Communication",
			"definition": "Social media are interactive computer-mediated technologies that facilitate the creation and sharing of information, ideas, career interests and other forms of expression via virtual communities and networks.",
			"concept": [
				{
					"code": "email",
					"display": "Email",
					"definition": "Messages distributed by electronic means from one computer user to one or more recipients via a network."
				},
				{
					"code": "networking",
					"display": "Networking Site",
					"definition": "Is an online platform that allows users to create a public profile and interact with other users on the website."
				},
				{
					"code": "podcast",
					"display": "Podcast",
					"definition": "Is a series – it’s the entire show rather than any individual episode."
				},
				{
					"code": "social",
					"display": "Social Media",
					"definition": "Is a computer-based technology that facilitates the sharing of ideas and information and the building of virtual networks and communities."
				},
				{
					"code": "banner",
					"display": "Web Banner",
					"definition": "Is a form of advertising on the World Wide Web delivered by an ad server."
				},
				{
					"code": "webad",
					"display": "Webpage ad",
					"definition": "An online advertising is an ad that may take many different forms. It could be a banner, a graphic image or an animated GIF of a designated pixel size and byte size."
				},
				{
					"code": "posting",
					"display": "Web/Internet Posting",
					"definition": "Something posted for public viewing or an electronic message sent to and displayed on an online forum."
				},
				{
					"code": "website",
					"display": "Website",
					"definition": "A Website is a page or collection of pages on the World Wide Web that contains specific information which was all provided by one person, group or an organization."
				}
			]
		},
		{
			"code": "direct",
			"display": "Direct Communication",
			"definition": "Communication addressed to a specific person.",
			"concept": [
				{
					"code": "discussion",
					"display": "In-person Discussion",
					"definition": "Involving someone's physical presence rather than communication by phone, email, etc."
				},
				{
					"code": "invitiation",
					"display": "Letter/Invitation",
					"definition": "A written, typed, or printed communication, especially one sent in an envelope by mail or messenger."
				},
				{
					"code": "phone",
					"display": "Telephone Call",
					"definition": "A Telephone Call to a radio station or a television station in which the caller participates in the on-going program."
				}
			]
		},
		{
			"code": "group",
			"display": "Group Communication",
			"definition": "Communication addressed to more than one person.",
			"concept": [
				{
					"code": "advertisement",
					"display": "Advertisement",
					"definition": "An ad that may take many different forms. It could be a banner, a graphic image or an animated GIF of a designated pixel size and byte size."
				},
				{
					"code": "bulletin",
					"display": "Bulletin Board",
					"definition": "A place on a computer system where users can read messages and add their own ."
				},
				{
					"code": "newsletter",
					"display": "Newsletter",
					"definition": "Is Issued periodically to the members of a society, business, or organization."
				},
				{
					"code": "journal",
					"display": "Professional Journal",
					"definition": "Is scholarly journal addressed to a particular professional audience such as doctors, teachers or engineers and published by a professional organization."
				},
				{
					"code": "tip",
					"display": "Tip Sheet",
					"definition": "A publication that containing the latest information/tips/predictions for a particular business or stock market information or horse racing results, etc."
				}
			]
		},
		{
			"code": "public",
			"display": "Public Communication",
			"definition": "Communication addressed to the public.",
			"concept": [
				{
					"code": "announcement",
					"display": "Announcement",
					"definition": "A public and typically formal statement about a fact, occurrence, or intention."
				},
				{
					"code": "press",
					"display": "Press Release",
					"definition": "Is a written statement about a matter of public interest which is given to the press by an organization concerned with the matter."
				},
				{
					"code": "solicitation",
					"display": "Public Solicitation"
				},
				{
					"code": "snowball",
					"display": "Snowball Sampling",
					"definition": "A popular technique among social scientists who wish to work with a population that is difficult to identify or locate."
				}
			]
		}
	],
	"title": "Recruitment_materials_codesystem"
}